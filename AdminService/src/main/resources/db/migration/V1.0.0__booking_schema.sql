create schema if not exists barbershop;

create table barbershop.t_barber (
    barber_id int generated by default as identity primary key,
    c_barber_name varchar(50) not null check (length(trim(c_barber_name)) >= 3),
    c_email varchar(255) not null check (length(trim(c_email)) >= 10),
    c_phone_number varchar(200) not null check (length(trim(c_phone_number)) >= 11)
);

create table barbershop.t_customer(
    customer_id int generated by default as identity primary key,
    c_customer_name varchar(50) not null check (length(trim(c_customer_name)) >= 3),
    c_email varchar(255) not null check (length(trim(c_email)) >= 10),
    c_phone_number varchar(200) not null check (length(trim(c_phone_number)) >= 11)
);

create table barbershop.t_service(
    service_id int generated by default as identity primary key,
    c_service_name varchar(50) not null check (length(trim(c_service_name)) >= 3),
    c_duration int not null,
    c_price int not null,
    c_description varchar(500)
);

create table barbershop.t_booking(
    booking_id int generated by default as identity primary key,
    c_booking_date date default null,
    c_comments varchar(255) default null,
    c_end_time time default null,
    c_start_time time default null,
    barber_id int default null REFERENCES barbershop.t_barber(barber_id),
    customer_id int default null REFERENCES barbershop.t_customer(customer_id),
    service_id int default null REFERENCES barbershop.t_service(service_id)
);

create table barbershop.t_service_provider(
    service_id int not null REFERENCES barbershop.t_service(service_id),
    barber_id int not null REFERENCES barbershop.t_barber(barber_id)
);